# CircleCI configuration file

version: 2.1

executors:
    docker-publisher:
        environment:
            IMAGE_NAME: devs32/todolist-springboot
        docker:
            -   image: circleci/buildpack-deps:stretch

dev_branch_only: &dev_branch_only
    filters:
        branches:
            only: develop

prod_branch_only: &prod_branch_only
    filters:
        branches:
            only: master

jobs:
    build:
        working_directory: ~/repo
        docker:
            -   image: cimg/openjdk:17.0.7
        environment:
            IMAGE_NAME: devs32/todolist-springboot
        steps:
            - checkout
            -   run:
                    name: gradle build
                    command: ./gradlew clean build -Dorg.gradle.jvmargs="$JVM_OPTS"
            - setup_remote_docker
            -   run:
                    name: docker build
                    command: docker build -t $IMAGE_NAME todolist-web/
            -   run:
                    name: save image
                    command: docker save -o image.tar $IMAGE_NAME
            -   persist_to_workspace:
                    root: .
                    paths:
                        - ./image.tar
    push:
        executor: docker-publisher
        steps:
            -   attach_workspace:
                    at: /tmp/workspace
            - setup_remote_docker
            -   run:
                    name: load image
                    command: docker load -i /tmp/workspace/image.tar
            -   run:
                    name: docker hub login
                    command: docker login -u ${DOCKERHUB_USERNAME} -p ${DOCKERHUB_PASSWORD}
            -   run:
                    name: docker hub push
                    command: docker push $IMAGE_NAME:latest
    run via ssh:
        machine:
            image: ubuntu-2204:2023.07.2
        steps:
            -   run:
                    name: connect ssh and run
                    command: ssh -v $SSH_USER@$SSH_HOST -p $SSH_PORT home/devs32/script/todolist/deploy_todolist.sh

workflows:
    develop-pipeline:
        jobs:
            -   build:
                    <<: *dev_branch_only
            -   push:
                    requires:
                        - build
                    <<: *dev_branch_only
            -   run via ssh:
                    requires:
                        - push
                    <<: *dev_branch_only
